// Code generated by go-swagger; DO NOT EDIT.
// HELLO :form3: !

package subscriptions

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// Client.GetSubscriptionsHealth creates a new GetSubscriptionsHealthRequest object
// with the default values initialized.
func (c *Client) GetSubscriptionsHealth() *GetSubscriptionsHealthRequest {

	return &GetSubscriptionsHealthRequest{

		timeout: cr.DefaultTimeout,

		transport: c.transport,
		formats:   c.formats,
	}
}

type GetSubscriptionsHealthRequest struct {
	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client

	transport runtime.ClientTransport
	formats   strfmt.Registry
}

func (o *GetSubscriptionsHealthRequest) FromJson(j string) *GetSubscriptionsHealthRequest {

	return o
}

//////////////////
// WithContext adds the context to the get subscriptions health Request
func (o *GetSubscriptionsHealthRequest) WithContext(ctx context.Context) *GetSubscriptionsHealthRequest {
	o.Context = ctx
	return o
}

// WithHTTPClient adds the HTTPClient to the get subscriptions health Request
func (o *GetSubscriptionsHealthRequest) WithHTTPClient(client *http.Client) *GetSubscriptionsHealthRequest {
	o.HTTPClient = client
	return o
}

// WriteToRequest writes these Request to a swagger request
func (o *GetSubscriptionsHealthRequest) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
